--track0:高さ,0,4000,100
--track1:幅,0,4000,100
--track2:回転[°],-3600,3600,0
--track3:周期[s],-10,10,1
--dialog:*波形,_1=1; 位相[°],_2=0; 波形ミラー/chk,_3=0; *エッジ固定,_4=1; reload/chk,_5=0; PI,_0=nil;

local check, R = pcall(require, "rikky_module")
if check then
    local shape_list={"サイン", "矩形", "三角形", "のこぎり(正)", "のこぎり(負)", "円形", "半円形(正)", "半円形(負)"}
    local fix_list={"なし", "すべて", "水平", "垂直", "上", "下", "左", "右"}
    R.list(1, shape_list, 4, fix_list)
end

_0 = _0 or {}
local height = tonumber(_0[1]) or obj.track0
local width = tonumber(_0[2]) or obj.track1
local rot = (tonumber(_0[3]) or obj.track2) / 180 * math.pi
local period = tonumber(_0[4]) or obj.track3
local shape = tonumber(_1) or 1
local phase = (tonumber(_2) or 0) / 360 % 1
local mirror = _3~=0 and _3~=false
print(false and 1 or 2)
local fix = tonumber(_4) or 1
local reload = _5~=0 and _5~=false
_0=nil;_1=nil;_2=nil;_3=nil;_4=nil;_5=nil;

local WaveWarp_F = require("WaveWarp_F")
WaveWarp_F.WaveWarp_F(height, width, rot, period, shape, phase, mirror, fix, reload)

--参考 https://github.com/Mr-Ojii/AviUtl-RotBlur_M-Script
--参考 https://github.com/korarei/AviUtl_DisplacementMapEditor_Script
--参考 https://github.com/sigma-axis/aviutl_script_TrackBoundary_S